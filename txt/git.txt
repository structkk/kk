
#define  _CRT_SECURE_NO_WARNINGS 1


#include<stdio.h>
#include<string.h>

int main()
{
	int i = 0;
	int sum = 0;
	int n = 0;
	int ret = 1;
	scanf("%d", &n);
	for (i = 1; i <= n; i++)
	{
		int j = 0;
		int ret = 1;
		for (j = 1; j <= i; j++)
		{
			ret *= j;
		}
		sum += ret;
	}
	printf("%d\n", sum);

	return 0;
}



void reverse_strint(char *arr)
{
	char tmp = arr[0];
	int len = strlen(arr);
	arr[0] = arr[len - 1];
	arr[len - 1] = '\0';
	if (strlen(arr + 1) >= 2)
		reverse_strint(arr + 1);
	arr[len - 1] = tmp;
}

int main()
{
	char arr[] = "abcdef";
	
	reverse_strint(arr);
	printf("%s\n", arr);
	
	return 0;
}

int P(int n, int k)
{
	if (k < 0)
		return(1 / P(n, -k));


	else if (k == 0)

		return 1;
	
	else
		return n * P(n, k - 1);
}
int main()
{
	int n = 2;
	int k = 3;
	int ret = P(n, k);
	printf("%d\n", ret);
	return 0;
//}
int main()
{
	int i = 0;
	for (i = 0; i < 100; i++)
	{
		printf("%d ", i);
	}
	for (i = 0; i < 100; i++)
	{
		printf("%d ", 10-i);
	}
	return 0;
}
int main()
{
	int i = 0;
	/*int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };*/
	printf("%p\n", &i);
	printf("%p\n", arr);
	for (i = 0; i <10; i++)
	{
		printf("kk\n");
		arr[i] = 0;
	}
	return 0;
}


void minestrcpy(char* arr1, char* arr2)
{
	int i = 0;

	char j = strlen(arr2);
	for (i = 0; i < j; i++)
	{
		int tmp = 0;
		tmp = arr2[i];
		arr2[i] = arr1[i];
		arr1[i] = tmp;
	}
	printf("%s %s\n", arr1,arr2);
}

int main()
{
	char arr1[] = "###########";
	char arr2[] = "kang";
	minestrcpy(arr1, arr2);
	printf("%s\n", arr2);
}
int a = 1;
	char* p = (char*)&a;
	if (*p == 1)
	{
		printf("小端\n");
	}
	else
	{
		printf("大端\n");
	}
int check_sys()
{
	int a = 1;
	return *(char*)&a;
}
int main()
{
	

	int ret =check_sys();
	if (ret == 1)
	{
		printf("xiao\n");
	}
	else
	{

		printf("da\n");
	}
	return 0;
}
int main()
{
	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };
	int* p = arr;
	int i = 0;
	for (i = 0; i < 10; i++)
	{
		printf( "%d\n ", *(p+i));

	}
	return 0;
}
struct Stu
{
	char name[20];
	int age;

};
int p (const void* a, const void* b)
{
	return*(int*)a - *(int*)b;

}

int main()
{
	int arr[] = { 9,8,7,6,5,4,3,2,1,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	int q = sizeof(arr[0]);
	struct Stu s[3] = {{"zhangsan",20},{"lisi",55},{"wangwu",10}};
	qsort(arr, sz, sizeof(arr[0]), p);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%d\n", arr[i]);
	}
	return 0;
}